<template>
<div class="cas__container">
  <ul class="cas__list">
    <li 
      s-for="option, index in options"
      class="cas__item {{ index === selectedIndex ? 'cas__item--selected' : '' }}"
      on-click="handleClick(index, option.label)"
    >
      <label class="cas__link">
        {{ option.label }}
        <span s-if="option.children">></span>
      </label>
    </li>
  </ul>
  <ui-node s-if="show && childOptions" depth="{{ depth + 1}}" options="{{ childOptions }}" />
</div>
</template>

<script>
export default {
  components: {
    'ui-node': 'self',
  },
  initData: {
    depth: 0,
    selectedIndex: -1,
    show: false,
    childOptions: [],
    path: [],
  },
  setPath(depth, label) {
    const [...path] = this.data.get('path');
    path[depth] = label;
    path.length = depth + 1;
    this.data.set('path', path);
  }
  handleClick(index, label) {
    const { children } = this.data.get('options')[index];
    const selectedIndex = this.data.get('selectedIndex');
    const show = this.data.get('show');
    const depth = this.data.get('depth');
    let nextLabel = '';

    if (selectedIndex === index) {
      this.data.set('selectedIndex', -1);
      this.data.set('show', false);
      nextLabel = '';
    } else {
      this.data.set('selectedIndex', index);
      this.data.set('show', true);
      nextLabel = label;
    }

    if (children && children.length) {
      this.data.set('childOptions', children);
    }

    if (depth === 0) {
      setPath(depth, nextLabel);
    }

    this.dispatch('path:root', {
      depth,
      label: nextLabel,
    });
  },
  messages: {
    'path:root': function (event) {
      const currentDepth = this.data.get('depth');

      if (currentDepth !== 0) {
        this.dispatch('path:root', {
          ...event.value,
        });
        return;
      }

      const { depth, label } = event.value;
      setPath(depth, label);
    }
  }
};
</script>

<style>
.cas__container {
  display: flex;
  flex-direction: row;
  margin: 0;
}

.cas__list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.cas__item {
  position: relative;
  transition: background-color 0.2s ease-in, color 0.2s ease-in;
  min-width: 5em;
  min-width: 10em;
  margin: 0;
  padding: 0.5em 1em;
  cursor: pointer;
}

.cas__item {
  background-color: #fff;
  color: #f03e3e;
}

.cas__item--selected {
  background-color: #f03e3e;
  color: #fff;
}

.cas__link {
  display: block;
  cursor: pointer;
}
</style>
